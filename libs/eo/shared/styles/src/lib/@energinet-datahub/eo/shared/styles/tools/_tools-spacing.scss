// INSET
// Watt insets don't support an XXL size
@mixin inset-xxl($important: true, $padding: false) {
  $important-expression: "!important";

  @if $important == false {
    $important-expression: "";
  }

  @if $padding == true {
    padding: var(--eo-space-xxl) #{$important-expression};
  } @else {
    margin: var(--eo-space-xxl) #{$important-expression};
  }
}

// SQUISHED INSET
// Watt insets don't support `!important`
@mixin squished-inset-m($important: true, $padding: false) {
  $important-expression: "!important";

  @if $important == false {
    $important-expression: "";
  }

  @if $padding == true {
    padding: var(--watt-space-s) var(--watt-space-m) #{$important-expression};
  } @else {
    margin: var(--watt-space-s) var(--watt-space-m) #{$important-expression};
  }
}

// Watt insets don't support an XXL size
@mixin squished-inset-xxl($important: true, $padding: false) {
  $important-expression: "!important";

  @if $important == false {
    $important-expression: "";
  }

  @if $padding == true {
    padding: var(--watt-space-xl) var(--eo-space-xxl) #{$important-expression};
  } @else {
    margin: var(--watt-space-xl) var(--eo-space-xxl) #{$important-expression};
  }
}

// STRETCHED INSET
@mixin stretched-inset-l($important: true, $padding: false) {
  $important-expression: "!important";

  @if $important == false {
    $important-expression: "";
  }

  @if $padding == true {
    padding: var(--watt-space-l) var(--watt-space-m) #{$important-expression};
  } @else {
    margin: var(--watt-space-l) var(--watt-space-m) #{$important-expression};
  }
}
