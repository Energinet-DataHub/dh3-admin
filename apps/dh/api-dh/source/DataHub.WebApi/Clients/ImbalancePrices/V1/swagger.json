{
  "openapi": "3.0.1",
  "info": {
    "title": "ImbalancePrices",
    "version": "1.0"
  },
  "paths": {
    "/imbalance-prices/upload": {
      "post": {
        "tags": [
          "Imbalance"
        ],
        "operationId": "upload",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "imbalancePricesFile": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "imbalancePricesFile": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/imbalance-prices/download": {
      "get": {
        "tags": [
          "Imbalance"
        ],
        "operationId": "download",
        "parameters": [
          {
            "name": "fromDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/imbalance-prices/getByMonth": {
      "get": {
        "tags": [
          "Imbalance"
        ],
        "operationId": "getByMonth",
        "parameters": [
          {
            "name": "year",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "month",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "priceAreaCode",
            "in": "query",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/PriceAreaCode"
                }
              ]
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ImbalancePricesDailyDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ImbalancePricesDailyDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ImbalancePricesDailyDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/imbalance-prices/status": {
      "get": {
        "tags": [
          "Imbalance"
        ],
        "operationId": "status",
        "parameters": [
          {
            "name": "fromDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "priceAreaCode",
            "in": "query",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/PriceAreaCode"
                }
              ]
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ImbalancePricePeriodStatus"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImbalancePricePeriodStatus"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImbalancePricePeriodStatus"
                }
              }
            }
          }
        }
      }
    },
    "/ping-imbalance-prices/ping": {
      "get": {
        "tags": [
          "Ping"
        ],
        "operationId": "ping",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/ping-imbalance-prices/authorized-ping": {
      "get": {
        "tags": [
          "Ping"
        ],
        "operationId": "authorized-ping",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ImbalancePriceDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "priceAreaCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PriceAreaCode"
              }
            ]
          },
          "price": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "ImbalancePricePeriodStatus": {
        "type": "string",
        "enum": [
          "NoPrices",
          "Incomplete",
          "Complete"
        ]
      },
      "ImbalancePricesDailyDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ImbalancePricePeriodStatus"
              }
            ]
          },
          "timeStamp": {
            "type": "string",
            "format": "date-time"
          },
          "imbalancePrices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImbalancePriceDto"
            }
          },
          "importedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "PriceAreaCode": {
        "type": "string",
        "enum": [
          "AreaCode1",
          "AreaCode2"
        ]
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
        "scheme": "Bearer"
      }
    }
  },
  "security": [
    {
      "Bearer": [
        "Bearer"
      ]
    }
  ]
}