# Copyright 2020 Energinet DataHub A/S
#
# Licensed under the Apache License, Version 2.0 (the "License2");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Design System Frontend and BFF
name: Watt CI

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  APP_NAME: designsystem
  NODE_VERSION_FILE: .nvmrc
  # keep in sync with "engines.yarn" and "volta.yarn" in "package.json"
  YARN_VERSION: 1.22.19
  NX_MAX_PARALLEL: 2

on:
  pull_request:
    branches:
      - main

jobs:
  #
  # Detect changes to start relevant jobs
  #

  changes:
    uses: ./.github/workflows/dh-detect-changes.yml

  #
  # Frontend
  #
  frontend_ci_build:
    if: ${{ needs.changes.outputs.frontend == 'true' }}
    needs: changes
    runs-on: ubuntu-latest
    env:
      RELEASE_VERSION: watt_frontend_${{ github.event.number }}
      RELEASE_FOLDER_PATH: ${{ github.workspace }}/watt_frontend_${{ github.event.number }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: ${{ env.NODE_VERSION_FILE }}
          cache: 'yarn'

      - name: Disable workspace NGCC run
        uses: ./.github/actions/setup-postinstall
        with:
          ngcc: false

      - name: Set yarn version ${{ env.YARN_VERSION }}
        run: yarn set version ${{ env.YARN_VERSION }}

      - name: Install package dependencies
        run: yarn install --frozen-lockfile --non-interactive

      - name: Angular Compatibility Compiler
        run: npm run ngcc:dh

      - name: Production build
        run: yarn ${{ env.APP_NAME }}:build

      - name: Setup Release
        shell: bash
        run: cp -R ${{ github.workspace }}/dist/${{ env.APP_NAME }} ${{ env.RELEASE_FOLDER_PATH }}

      - name: Zip artifact
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          filename: '${{ env.RELEASE_VERSION }}.zip'
          directory: ${{ env.RELEASE_FOLDER_PATH }}

      - name: Create prelease
        uses: marvinpinto/action-automatic-releases@v1.2.1
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: ${{ env.RELEASE_VERSION }}
          prerelease: true
          title: ${{ env.RELEASE_VERSION }}
          files: ${{ env.RELEASE_FOLDER_PATH }}/${{ env.RELEASE_VERSION }}.zip

  #
  # Branch policy status check
  #

  allow_merge:
    runs-on: ubuntu-latest
    needs: [
        # Frontend
        frontend_ci_build,
      ]
    if: |
      always()
    steps:
      - name: Verify if merge is allowed
        run: |
          echo "${{ toJSON(needs) }}"
          if [[ ${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') }} = true ]]; then
              echo "Failed"
              exit 1
          fi
