# Copyright 2020 Energinet DataHub A/S
#
# Licensed under the Apache License, Version 2.0 (the "License2");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
name: Production Dependencies

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  node-version-file: .nvmrc
  # keep in sync with "engines.yarn" and "volta.yarn" in "package.json"
  yarn-version: 1.22.19

on:
  pull_request:
    branches:
      - main
    paths:
      - 'package.json'
      - 'yarn.lock'
  workflow_dispatch: {}

jobs:
  License_check:
    name: License Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout latest code
        uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version-file: ${{ env.node-version-file }}
      - name: Get Yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache Yarn cache directory
        uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Disable Angular Compatibility Compiler
        uses: ./.github/actions/setup-postinstall
        with:
          ngcc: false

      - name: Set yarn version ${{ env.yarn-version }}
        run: yarn set version ${{ env.yarn-version }}

      - name: Install package dependencies
        run: yarn install --frozen-lockfile --non-interactive

      - name: Read .allowed-licenses.json
        id: allowed-licenses
        shell: bash
        run: echo ::set-output name=FILE::$(jq -r .[] .allowed-licenses.json | tr '\n' ';')
      - name: Run license-checker
        run: npx license-checker-rseidelsohn --direct --summary --production --onlyAllow="${{ steps.allowed-licenses.outputs.FILE }}"
