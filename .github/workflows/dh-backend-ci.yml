# Copyright 2020 Energinet DataHub A/S
#
# Licensed under the Apache License, Version 2.0 (the "License2");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Continuous Integration of domain except for own NuGet packages
name: DH Backend CI

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  app-name: app-dh
  BASE_BRANCH: ${{ github.event.pull_request.base.ref }}
  is-main-branch: ${{ github.ref == 'refs/heads/main' }}
  is-pull-request: ${{ github.event_name == 'pull_request' }}
  NODE_OPTIONS: --max-old-space-size=6144
  node-version-file: .nvmrc
  # keep in sync with "engines.yarn" and "volta.yarn" in "package.json"
  yarn-version: 1.22.19
  NX_MAX_PARALLEL: 2

  # Nx Cloud
  NX_BRANCH: ${{ github.event.number }}
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
  NX_RUN_GROUP: ${{ github.run_id }}

on:
  pull_request:
    branches:
      - main

jobs:
  #
  # Detect changes to start relevant jobs
  #

  changes:
    uses: ./.github/workflows/dh-backend-detect-changes.yml

  #
  # CI Infrastructure
  #

  infrastructure_ci_build:
    needs: changes
    if: ${{ needs.changes.outputs.infrastructure == 'true' }}
    uses: Energinet-DataHub/.github/.github/workflows/infrastructure-build-prerelease.yml@v8
    with:
      TERRAFORM_WORKING_DIRECTORY: 'build/infrastructure/dh/main'
      TERRAFORM_VERSION: '1.2.2'
      INFRASTRUCTURE_PATH: 'build/infrastructure/dh'
  #
  # CI .NET
  #

  # Build all projects within solution
  dotnet_ci_build:
    needs: changes
    if: ${{ needs.changes.outputs.dotnet == 'true' }}
    uses: Energinet-DataHub/.github/.github/workflows/dotnet-build-prerelease.yml@v9
    with:
      SOLUTION_FILE_PATH: 'apps/dh/api-dh/DataHub.WebApi.sln'

  # Run all tests in 'Tests.dll'
  dotnet_ci_test_unittests:
    needs: changes
    if: ${{ needs.changes.outputs.dotnet == 'true' }}
    uses: Energinet-DataHub/.github/.github/workflows/dotnet-solution-ci-test.yml@v8
    with:
      TESTS_DLL_FILE_PATH: 'apps/dh/api-dh/source/DataHub.WebApi.Tests/DataHub.WebApi.Tests/bin/Release/net6.0/DataHub.WebApi.Tests.dll'
      DOWNLOAD_ATTEMPT_LIMIT: 12

  #
  # Client Generation
  #

  generate_client:
    needs: [
      # Infrastructure
      infrastructure_ci_build,
      # .NET
      dotnet_ci_build,
      dotnet_ci_test_unittests,
    ]
    runs-on: ubuntu-latest
    env:
      output-path: libs/dh/shared/domain/src/lib/generated/v1/

    steps:
      # needed to push to origin
      - name: 'PR: Check out source code with current branch Git history'
        if: ${{ env.is-pull-request == 'true' }}
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}
          token: ${{ secrets.PAT_TOKEN }}

      - name: 'Merge: Check out source code'
        if: ${{ env.is-main-branch == 'true' }}
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: ${{ env.node-version-file }}
          cache: 'yarn'

      - name: Set yarn version ${{ env.yarn-version }}
        run: yarn set version ${{ env.yarn-version }}

      - name: Install package dependencies
        run: yarn install --frozen-lockfile --non-interactive

      - name: Generate API client
        run: yarn nx run api-dh:build-client

      - name: 'PR: Commit generated files'
        if: ${{ env.is-pull-request == 'true' }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add ${{ env.output-path }} || cd .
          git commit -m 'feat(dh): generate DataHub API v1 client' || cd .
          git push origin --force-with-lease || cd .

      - name: 'Merge: Verify no changes'
        if: ${{ env.is-main-branch == 'true' }}
        run: |
          git diff ${{ env.output-path }} --exit-code || (echo '‚ùå DataHub API v1 client is out-of-sync. Run the `build-client` Nx target and merge the changes.' && exit 1)

  #
  # Branch policy status check
  #

  allow_merge:
    runs-on: ubuntu-latest
    needs: [
        # Infrastructure
        infrastructure_ci_build,
        # .NET
        dotnet_ci_build,
        dotnet_ci_test_unittests,
      ]
    if: |
      always()
    steps:
      - name: Verify if merge is allowed
        run: |
          echo "${{ toJSON(needs) }}"
          if [[ ${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') }} = true ]]; then
              echo "Failed"
              exit 1
          fi
