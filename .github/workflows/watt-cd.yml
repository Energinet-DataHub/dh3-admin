# Copyright 2020 Energinet DataHub A/S
#
# Licensed under the Apache License, Version 2.0 (the "License2");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Design System Frontend
name: Watt CD

env:
  node-version-file: .nvmrc
  # keep in sync with "engines.yarn" and "volta.yarn" in "package.json"
  yarn-version: 1.22.19

on:
  push:
    branches:
      - main

jobs:
  #
  # Detect changes to start relevant jobs
  #

  changes:
    uses: ./.github/workflows/watt-detect-changes.yml

  #
  # Frontend
  #

  frontend_promote_prerelease:
    needs: changes
    if: ${{ needs.changes.outputs.frontend == 'true' }}
    uses: Energinet-DataHub/.github/.github/workflows/promote-prerelease.yml@v9
    with:
      RELEASE_NAME_PREFIX: watt_frontend

  chromatic_deployment:
    name: Deploy to Chromatic
    needs: changes
    if: ${{ needs.changes.outputs.frontend == 'true' }}
    # Operating System
    runs-on: ubuntu-latest
    # Job steps
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: ${{ env.node-version-file }}
          cache: 'yarn'

      - name: Set yarn version ${{ env.yarn-version }}
        run: yarn set version ${{ env.yarn-version }}

      - name: Install package dependencies
        run: yarn install --frozen-lockfile --non-interactive

        # ðŸ‘‡ Adds Chromatic as a step in the workflow
      - name: Publish to Chromatic
        uses: chromaui/action@v1
        # Chromatic GitHub Action options
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          # ðŸ‘‡ Chromatic projectToken, refer to the manage page to obtain it.
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          exitZeroOnChanges: true # ðŸ‘ˆ Option to prevent the workflow from failing
          buildScriptName: 'designsystem:build'

  #
  # Dispatch deployment request
  #

  dispatch_deploment_event:
    runs-on: ubuntu-latest
    needs: [
        # Necessary to be able to use its outputs in the dispatch event
        changes,
        # Frontend
        frontend_promote_prerelease,
        chromatic_deployment,
      ]
    if: |
      always() &&
      !contains(needs.*.result, 'failure') &&
      !contains(needs.*.result, 'cancelled') &&
      !(
        needs.frontend_promote_prerelease.result == 'skipped' &&
        needs.chromatic_deployment.result == 'skipped'
      )
    steps:
      - run: echo "${{ toJSON(needs) }}"

      - name: Find associated pull request
        uses: Energinet-DataHub/.github/.github/actions/find-related-pr-number@v9
        id: find_pull_request

      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.PAT_TOKEN }}
          repository: '${{ secrets.ENVIRONMENT_REPOSITORY_PATH }}'
          event-type: 'watt-deployment-request-domain'
          client-payload: '{"domain_pr": "${{ steps.find_pull_request.outputs.pull_request_number }}", "frontend_deploy": "${{ needs.changes.outputs.frontend }}"}'

  #
  # Send notification to teams channel if deployment dispatch failed
  #

  dispatch_failed:
    needs: [
      frontend_promote_prerelease,
      chromatic_deployment,
      dispatch_deploment_event,
    ]
    if: |
      always() &&
      contains(needs.*.result, 'failure')
    uses: Energinet-DataHub/.github/.github/workflows/notify-team.yml@v9
    with:
      TEAM_NAME: 'TexasRangers'
      SUBJECT: 'Deployment dispatch failed: Watt + UI'
    secrets: inherit
