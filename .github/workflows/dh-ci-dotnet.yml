# Copyright 2020 Energinet DataHub A/S
#
# Licensed under the Apache License, Version 2.0 (the "License2");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# DataHub UI Frontend and BFF
name: DH CI dotnet

on:
  workflow_call: {}

env:
  APP_NAME: app-dh
  IS_MAIN_BRANCH: ${{ github.ref == 'refs/heads/main' }}
  IS_PULL_REQUEST: ${{ github.event_name == 'pull_request' }}
  NODE_OPTIONS: --max-old-space-size=6144
  NODE_VERSION_FILE: .nvmrc
  # keep in sync with "engines.yarn" and "volta.yarn" in "package.json"
  YARN_VERSION: 1.22.19
  NX_MAX_PARALLEL: 2

jobs:
  #
  # CI .NET
  #

  # Build all projects within solution
  dotnet_ci_build:
    if: ${{ needs.changes.outputs.dotnet == 'true' }}
    uses: Energinet-DataHub/.github/.github/workflows/dotnet-build-prerelease.yml@v10
    with:
      SOLUTION_FILE_PATH: 'apps/dh/api-dh/DataHub.WebApi.sln'
      RELEASE_NAME_PREFIX: ui_dotnet

  # Run all tests in 'Tests.dll'
  dotnet_ci_test:
    needs: dotnet_ci_build
    uses: Energinet-DataHub/.github/.github/workflows/dotnet-postbuild-test.yml@v10
    with:
      TESTS_DLL_FILE_PATH: '\apps\dh\api-dh\source\DataHub.WebApi.Tests\bin\Release\net6.0\Energinet.DataHub.WebApi.Tests.dll'
      DOWNLOAD_ATTEMPT_LIMIT: 12
      ENVIRONMENT: AzureAuth
    secrets:
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_SPN_ID: ${{ secrets.AZURE_SPN_ID_OIDC }}
      AZURE_KEYVAULT_URL: ${{ secrets.AZURE_KEYVAULT_URL }}
      AZURE_B2CSECRETS_KEYVAULT_URL: ${{ secrets.AZURE_B2CSECRETS_KEYVAULT_URL }}

  #
  # Branch policy status check
  #

  allow_merge:
    runs-on: ubuntu-latest
    needs: [
        # .NET
        dotnet_ci_build,
        dotnet_ci_test,
      ]
    if: |
      always()
    steps:
      - name: Verify if merge is allowed
        run: |
          echo "${{ toJSON(needs) }}"
          if [[ ${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') }} = true ]]; then
            echo "Failed"
            exit 1
          fi
